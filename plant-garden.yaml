#-------------------------------------------
# BUG AND REPAIR AND PLANNED
#-------------------------------------------
# control overcharge supercap

#-------------------------------------------
# REVISION
#-------------------------------------------
# 2023.05.1.1.0
 # - replace AMS2301 by BME280
 # - replace TEMT600 by BH1750
 # - disconnect ADS1115
 # - measure only supercap voltage on ADC pin

# 2023.07.10
 # replace BME280 by HTU21D whit heater no condensaye humidity
 
# 2024.03.19
 # - measure moisture soil whit ADC and PWM unsolder lm555
 # - delayled I2C start whit custom component
 # - Add ina219 measure battery / or alter. ads1115

# 2024.03.26
 # - replace ESP12F to ESP07
 
# 2025.04.10
 # - replace esp8266 to esp32 c3 supermini ipex
 # - replace supervisor
 # - enable heater on htu21d change to sht31
 # - add new sensor ec sonde

#-------------------------------------------
# SUBTITUTIONS - basic definitions and description of the device
#-------------------------------------------
substitutions:
  device_name:         plant-garden
  friendly_name:       plant-garden
  created_by:         "StudioTiiM 2023-2025"
  device_description: "Soil sensor measure weather and soil powered supercap and solar"
#-------------------------------------------
# DEFINE PINS AND VARIABILES
# CIRCUIT AND MODULES - basic definitions and description of the device
#-------------------------------------------
# ----- MCU -----
  # Module: ESP32-C3 super mini
   # LDO: ME6211 Quiescent current max 3µA
   # Power Consumption: 
    # Peak start:     250mA
    # Peak wifi:      150mA https://www.homeassistant-cz.cz/download/file.php?id=1185&mode=view) 
    # Peak Normal:     70mA 
    # Peak Wifi off:   30mA
    # DeepSleep:     ~ 9.6μA 90 UA
   # Modifiations:
    # Unsolder: 
     # - Diode usb C3 drop voltage
     # - Resistor power led
     # - WS led
     # - Resistor status led
  
# ----- ELECTRICITY -----
 # ----- POWER SUPPLY -----
  # Module: Super capacitor
   # Specification: 2.7V 22F
   # Circuit: 2x connected in series out 5.5V
   # Converting energy:
    # F - mAh
    # mAh = (F * Delta V / 3600) * 1000 = (22 * 2 /3600) * 1000 = 12.2mAh
   # Teoretical Life on SuperCap:
    # Battery Capacity: 12.2mAh
    # Voltage: 3.3V
    # Running Time: 12s
    # Running current: 80mA
    # Idle Time: 3584s
    # Idle Current: 20μA
    
    # Average Consumption: 375.5μA
    # Battery Life: 1.353d
    # Watt-hours: 40.26mWh
    
# ------ MODULES ---
 # ----- MEASURE -----
  # Module: INA219 High Side DC Current
   # Specification: Dimension 25x22mm / Voltage: Operating 3 ~ 5.5V, max in 32V / Resolution: 3.2A 12bit / Accuracy: ±1% / Operational Range: Temperature: -25 ~ +85°C
   # Shunt resistor: 100mΩ max 320mV
    # Math: shunt_voltage / shunt_resistor = 0.32V / 0.1Ω = 3.2A know values: 0.144V / 1.44A = 0.1Ω
   # Consumption: Standby 15μA / Normal 1mA
   # Circuit: Interface: I2C 
    # address: 
      # A1   A2
      # -    -     0x40
      # SOLD -     0x44
      # -    SOLD  0x41
      # SOLD SOLD  0x45
  ina_shunt_resistor: 0.1 ohm
  ina_max_voltage:    16.0V
  ina_max_current:    1.0A
  address_ina:        "0x40"

  # OLD:
  # -----------------
  # ADC Voltage supercap
  # ADC reading whit transistor
  # Enable bipolar transistor: 2N3906 PNP and 2N7000 mofset NPN
   # Base resistor calculate: 
    # hFE:           60
    # iL (load A):   0.001A
    # Vi (base):     3.3V
    # Base resistor: Vi/(iL/hFE)/1000 = 3.3/(0.001/60)/1000 = 198kΩ => 220kΩ
  # -----------------

 # ----- SOLAR PANEL -----
  # Module: Solar panel 2Wp polycrystalline 5V
   # Specification: Pmax 2W / Voltage Vmp: 5.0V Voc: 5.0V / Imp: 400mA Isc: 400mA / dimension: 94x157x2mm / Operating temperature: -40 ~ +85°C / Wafer: class A polysilicon / Process: EVA lamination 
   # Circuit: protected shotky diode 1N5817 drop 0.2V
  width_panel:  "0.07" # m
  height_panel: "0.14" # m

 # ----- SUPERVISOR -----
  # Module: LMS33460 3V under voltage detector
   # Specification: Vin 0.8 ~ 7V / open drain out / SC70-5 package / Out current 30mA / 
   # Power consumption: disable 35µA / enable 45µA
   # Settings: 
    # Default: Falling 2.85 ~ 3.15V / Rising (change using divider): 0.095 ~ 0.215V / Delay time: 70 ~ 130µs
  # Circuit: 
   # Voltage divider: Supercap -> Protect diode 1N5817 -> VCC -> Trim 103 (7.07kΩ) -> In -> 100kΩ -> GND (VCC -> 470kΩ -> Out)
   # Mofset: Logic power mofset NPN FQP30N06L Gate -> 220Ω -> Out supervisor
  # HYSTERESIS  OFF    ON     
   # SuperCAP: 3.73V   3.76V
  under_voltage: "3.8"

 # ----- LDO -----
  # Module: ME6211
  
  # OLD
  # Module: Holtek HT7833
   # Specification: Voltage in 0 ~ 8V out fixed 3.3V 2% / max voltage drop 360mV / current max 0.5A / 
   # Protection: overtemperature / current limiting
   # Power consumption: Quiescent current 4µA
   # Circuit: VIN -> 2x ceramic 10μF -> GND / VOUT -> PPTC FUSE 0.5A 6V -> VOUT / VOUT -> 470μF 6.3V + 680μF 25V -> GND

 # ----- LEDS -----
  # Modul: Status led
   # Specification: on esp board smd red led
    # Modification: remove on board led and solder red whit additional 1KΩ resistor (+ on board 470Ω - down power consumption)
    # Power consumption: 328µA
  status_led_pin: GPIO05
  # Modul: led red diode
   # Specification: red led 3mm
    # Circuit: GPIO -> LED -> 2kΩ -> VCC(after deep sleep no light on)
    # Power consumption: 500µA
  indicator_led: GPIO02

  # ----- POWER SENSORS -----
  # OLD:
  # Modul: NPN power transistor 2N7000
   # Specification: power all measure modules (reduction of consumption)
   # Circuit: GND -> Collector / GPIO -> 1kΩ -> Base / Emitter -> GND out sensor
  # NEW: connected i2c, dallas device and pullup resistor i2c
  power_pin: GPIO10

 # ----- SOIL MOISTURE SENSOR -----
 # OLD 
 # WHIT MOISTURE ADC
  # Module: Soil moisture sensor
   # Specification: Voltage 3.3 ~ 12V / Current working: 20mA, Output 30mA / Dimension: 36x15x7 mm / PCB module whit LM393 comparator
   # Modification: unsolder leds (reducer consumption)
   # Power consumption: 1.6mA
   # Settings:
  #moisture_dry: 3.0V
  #moisture_wet: 1.85V
  #moisture_adc_pin: A0_GND
  #moisture_enable_pin: GPIO12
  #moisture_stabilize_time: 15s

 # WHIT PWM SIGNAL INPUT
  # Module: Capacitive Soil Moisture Sensor v2.0
   # Specification: Voltage 3.3 ~ 5.5V / Current working: 4.5mA / Dimension: 99x16 mm / PCB module whit TLC555 timer
   # Modification: https://thecavepearlproject.org/2020/10/27/hacking-a-capacitive-soil-moisture-sensor-for-frequency-output/
    # Unsolder all smd chips on board
    # Create new circuit on PCB whit LMC555 timer
    # Output PWM signal
   # Power consumption: 1.6µA
   # Settings:
  # moisture_dry: 35kHz
  # moisture_wet: 10kHz
  # No stabilization time
   # dry sand: 246kHz
   # middle wet soil: 210kHz
  # Whit 1 day stabilization time:
   # Dry > 35 000
   # Wet < 10 000 
  
  # NEW modifications
  # WHIT PWM SIGNAL ESP AND MEASURE ADC
  # PINOUT:
    #                                                       DIVIDER ESP8266 1V ADC
    # GND  <---+      +--< GPIO PWM   +--------+-----+------ R3  
    #          |      |               |        |     |      680kΩ
    #          |      |               ˄        |     -       +--------> GPIO ADC
    #        PROBE   R1              D1       R2    C1 1µF   R4  
    #          |     10kΩ            1n4148   1MΩ    -      680kΩ
    #          |      |               |        |     |       |
    #          +------+---------------+        +-----+-------+--> GND
    # 
  moisture_adc_pin:    GPIO0
  moisture_pwm_pin:    GPIO01
# moisture_frequency:  62000 Hz # 62kHz at this frequency, the pwm signal is still correct, at higher frequencies, the software pwm on the esp8266 can no longer keep up.
  moisture_frequency:  350000 Hz # https://thecavepearlproject.org/2020/10/27/hacking-a-capacitive-soil-moisture-sensor-for-frequency-output/ 
  moisture_brightness: 34%       # https://thecavepearlproject.org/2020/10/27/hacking-a-capacitive-soil-moisture-sensor-for-frequency-output/
  moisture_dry:        "2100.0" # mV
  moisture_wet:        "550.0"  # mV old
  moisture_water:      "950.0"  # mV
  
  # How to measure moisture soil:
   # https://www.mdpi.com/1424-8220/21/15/5110
   # https://thecavepearlproject.org/2020/10/27/hacking-a-capacitive-soil-moisture-sensor-for-frequency-output/
   # https://makersportal.com/blog/2020/5/26/capacitive-soil-moisture-calibration-with-arduino

 # ----- SOIL CONDUCTIVITY SENSOR -----
  # Module: TDS Meter V1.0
  # Sonde: TZT Soil Moisture Detector Module Soil Humidity Sensors Meter Hygrometer Water Tester Corrosion Resistance Probe DC 3.3-12V
   # Modifications: replace resistor R10 5.6kΩ (third from the left above the light) to 104 trimmer set 5.9kΩ detected soil range
    # Source: https://wiki.hackerspace.pl/projects:xiaomi-flora
    #         https://electronicstree.com/how-the-tds-sensor-module-works/
  # Measure Electrical Conductivity EC (µS/cm)
   # EC (µS/cm) | Fertility   | Note
   # 0–200      | Very Low    | Leached soil, poor quality
   # 200–500    | Low         | Can be improved with fertilization
   # 500–800    | Medium (OK) | Ideal for most plants
   # 800–1200   | Good        | Rich in nutrients
   # 1200–2000  | High        | Watch out for salt accumulation
   # >2000      | Very High   | Risk of salinization, restricted growth
  # Calculation: EC= 1/R * K
   # R resistance
   # K cell constant = d/A = 0.75 / 9.8 = 0.0765 cm−1
   # d distance between bars = 7.5mm
   # A area = 2* π * d * h = 2 * 3.14 * 2.0mm * 78mm = 9.8 cm2
  conductivity_adc_pin:    GPIO04
  conductivity_dry:        "100.0" # mV
  conductivity_dry_middle: "240.0"  # mV old
  conductivity_wet:        "550.0"  # mV old

  
 # ----- AMBIENT LIGHT SENSOR -----
 # OLD WHIT ADC
  # Module: TEMT6000
   # Specification: Voltage max. 6V / silicon  NPN  epitaxial  planar  phototransistor / Operating Temperature: -40 ~ +85°C / Angle of Half sensitivity: 60° / Wavelength of Peak Sensitivity: 570nm / Range of Spectral Bandwidth: 360 ~ 970nm
   # Conection: on module GND -> 10kΩ -> GPIO -> NPN -> VCC
   # Power consumption: 20mA (change whit intensity light)
   # Measure and formula calculate lux  https://devices.esphome.io/devices/temt6000
    # I = adc_value/10000kΩ
    # The datasheet for the TEMT6000 specifies a proportional correlation between current and illuminance: Every 2 µA of current correlates to 1 lx in the illuminance.
  #temt6000_resistor: "10000" #Ω
  #temt6000_amps: "2000000" #mA
    # max lux = 3.3V * 2000000 /10000 = 660lux / we adjust as much as possible using the cover
    # No real calibration is currently used.
    # Calibration designed for the exterior.
  #temt6000_adc_pin: A1_GND

 # NEW WHIT I2C
  # Module: BH1750 GY-302 lux meter
   # Specifications: 3V ~ 3.6V / Range:  1 ~ 65 535 lx
   # Circuit: Interface: I2C address: 0x23
   # Consumption: normal 4.4mA
   # Modification: unsolder ldo 602K
   # http://wiki.sunfounder.cc/index.php?title=GY-302_BH1750_Digital_Light_Intensity_Module
   
   # LUX wiki
    # Illuminance (lux) | Surfaces illuminated by
    # -----------------------------------------------
    # 0.0001 	        | Moonless, overcast night sky (starlight)[5]
    # 0.002 	        | Moonless clear night sky with airglow[5]
    # 0.05–0.3 	        | Full moon on a clear night[6]
    # 3.4 	            | Dark limit of civil twilight under a clear sky[7]
    # 20–50 	        | Public areas with dark surroundings[8]
    # 50 	            | Family living room lights (Australia, 1998)[9]
    # 80 	            | Office building hallway/toilet lighting[10][11]
    # 100 	            | Very dark overcast day[5]
    # 150 	            | Train station platforms[12]
    # 320–500 	        | Office lighting[9][13][14][15]
    # 400 	            | Sunrise or sunset on a clear day.
    # 1000 	            | Overcast day;[5] typical TV studio lighting
    # 10,000–25,000 	| Full daylight (not direct sun)[5]
    # 32,000–100,000 	| Direct sunlight
  address_bh:        "0x23"
  
 # ----- TEMPERATURE / HUMIDITY / PRESSURE SENSOR -----
 # OLD WHIT TX
  # Module: ASAIR AM2301
   # Specifications: Voltage: 3.3 ~ 5.2V / Operational Range: Temperature: -40 ~ +80°C Humidity: 0~100% / Resolution: Humidity: 0.1%RH, Temperature 0.1°C / Accuracy: Temperature: +-1°C Humidity: +-3% / Sample period: 2s
   # Circuit: Interface: one wire SDA
   # Power consumption: Dormancy: 15μA / Measuring: 500μA / Average: 300μA / whit multimeter 760μA
   # Measure after enable min. 2s
  #am2301_pin: GPIO13

 # OLD WHIT I2C
  # Module: BMP280 - pressure / temperature
   # Specifications: Voltage: 1.8 ~ 3.6V / Operational Range: Temperature: -40 ~ +85°C Pressure: 300~1100 hPa / Accuracy: Temperature: +-0.01°C Pressure: +-1.3Pa
   # Circuit: Interface: I2C address: 0x77
   # Power consumption: normal: 0.4mA measure: 0.7mA sleep: 0.2μA
   # Cabling: yellow: vcc / brown: gnd / green: sda / white: scl

  # Module: AHT22 - humidity / temperature
   # Specifications: Voltage: 2.0 ~ 5.5V / Operational Range: Temperature: -40 ~ +85°C Humidity: 0~100% / Accuracy: Temperature: +-0.3°C Humidity: 0.2%RH
   # Circuit: Interface: I2C address: 0x33
   # Power consumption: normal: 0.25μA measure: 23μA
   # Cabling: yellow: vcc / brown: gnd / green: sda / white: scl

  # Module: HTU21D - humidity / temperature
   # Specifications: Voltage: 1.5 ~ 3.6V / Operational Range: Temperature: -40 ~ +125°C Humidity: 0~100% / Accuracy: Temperature: +-0.3°C Humidity: +-2%RH
   # Heater: VDD= 3V 5.5mW/ΔT=+0.5-1.5°C 
   # Circuit: Interface: I2C address: 0x40
   # Power consumption: measure: 0.5mA sleep: 0.1μA
   # Cabling: yellow: vcc / brown: gnd / green: sda / white: scl
   
 # NEW WHIT I2C
  # Module: SHT31 - humidity / temperature, Serial Number: 0x19E7A0EC
   # Specifications: Voltage: 2.4 ~ 5.5V / Operational Range: Temperature: -40 ~ +125°C Humidity: 0~100% / Accuracy: Temperature: ±0.3°C Humidity: ±2%RH / I2C up 1MHz
   # Heater: VDD= 3V 10mW/ΔT=+0.5-1.5°C 
   # Circuit: Interface: I2C address: 0x44 
   # Power consumption: measure: 0.8mA sleep: 70μA
   # Cabling: yellow: vcc / brown: gnd / green: sda / white: scl
   # Heater: 1 enable / 0 disable
  address_sht:    "0x44"
  
  # Module: Dallas DS18B20
   # Circuit: 4.7kΩ resistor data pin to VCC
   # Power consumption: 50uA
   # Measure: Soil
   # UPDATE AFTER BOOT: 1s
  dallas_pin:     GPIO03
  address_dallas: "0xa13c24f648b38e28"

  # ----- UPDATE TIME -----
  update_interval: never
  stabilize_time: 8000ms

#-------------------------------------------
# PROTOCOLS
#-------------------------------------------
 # ----- PROTOCOLS PINS -----
  # I2C
  i2c_sda: GPIO06
  i2c_scl: GPIO07

 # ----- PROTOCOLS SETTINGS -----
  # I2C 
i2c:
 sda: $i2c_sda
 scl: $i2c_scl
 scan: True
 id:   i2c_bus
 #frequency: 200kHz
 #timeout: 10ms

  # ONE WIRE
one_wire:
  - platform: gpio
    pin: 
      number: "$dallas_pin"
      mode:
        input: true
        pullup: true
    #update_interval: 2s # Does not work component.update
    
#-------------------------------------------
# ESPHOME PLATFORM SETTINGS
#-------------------------------------------
esphome:
  name: ${device_name}
  #friendly_name: ${friendly_name}
  project:
    name: "studiotiim.plant-garden"
    version: 2025.04.5.0.0
  on_boot:
    - priority: 200.0
      then:
        # prevent enter deepsleep on boot user switch sleep/loop measure button
        - if:
            condition:
              - lambda: "return id(reset_reason).state == 3;" #ota 
            then:
              - logger.log: "OTA/SW RESET"
              - switch.turn_on: deepsleep_switch
              - light.turn_on: moisture_pwm_switch
              - wifi.enable:
            else:
              - if:
                  condition:
                    sensor.in_range:
                      below: $under_voltage # 3.8V
                      id: ina_voltage
                  then:
                    - logger.log: "LOW VOLTAGE ENTER SLEEP"
                    - deep_sleep.enter: deep_sleep_component
                  else:
                    - logger.log: "NORMAL START"
                    - wifi.enable:
                    - light.turn_on: moisture_pwm_switch
                    - light.turn_on: indicatorled
                    - delay: 50ms
                    - light.turn_off: indicatorled
                    #- delay: $stabilize_time

                    # wait mqtt
                    - wait_until:  
                        condition: mqtt.connected
                        timeout: 30s
                    # - delay: 400ms
                    # - text_sensor.template.publish:  # Send online state when mqtt is connected 
                    #     id: online_status
                    #     state: "Online"
              # - delay: 350ms
              # - component.update: soil_moisture

              #- delay: 1s
              #- component.update: soil_moisture
              # prevent enter deepsleep on boot user switch sleep/loop measure button

  on_shutdown: # send offline state when mcu power off or go to deep sleep
    priority: 0.0 # tested more settings the server does not always receive the value
    then:
      - light.turn_off: moisture_pwm_switch
      - binary_sensor.template.publish:
          id: online_status
          state: "False"
      - component.update: up_time
      - lambda: |-
          gpio_hold_dis(GPIO_NUM_8);
          gpio_set_direction(GPIO_NUM_8, GPIO_MODE_OUTPUT);
          gpio_set_level(GPIO_NUM_8, 0);      // zhasne LED
          gpio_hold_en(GPIO_NUM_8);           // podrži po prechode do deepsleep
          gpio_deep_sleep_hold_en;
      - delay: 100ms
      - logger.log: ENTER DEEPSLEEP


#-------------------------------------------
# ESP MCU SETTINGS
#-------------------------------------------
esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: esp-idf

#-------------------------------------------
# LOGGER
#-------------------------------------------
logger:
  #hardware_uart: USB_SERIAL_JTAG
  hardware_uart: UART0
  logs:
    component:   ERROR
    light:       WARN

#-------------------------------------------
# MQTT, API AND HTTP
#-------------------------------------------
mqtt:
  broker: '192.168.31.212'
  username: !secret mqtt_username
  password: !secret mqtt_password
  discovery: true
  reboot_timeout: 120s
  # Update sensors after connected to mqtt
  on_connect:
    - delay:            100ms
    - lambda:           ESP_LOGI("ONLINE", "Online status");
    - binary_sensor.template.publish:
        id:             online_status
        state:          true
    - lambda:           ESP_LOGI("WIFI", "Signal update");
    - component.update: signal_strange
    - lambda:           ESP_LOGI("HTU21D", "Temp/Humi update");
    - component.update: sht31_temp
    - delay:            100ms
    - lambda:           ESP_LOGI("DALLAS", "Temperature Soil state");
    - component.update: temp_soil
    - lambda:           ESP_LOGI("BH1750", "Light update");
    - component.update: ambient_light
    - lambda:           ESP_LOGI("SCRIPT", "enable");
    - script.execute:   skontroluj_vlhkost
    
  # online first message
  birth_message:
    topic: $device_name/status_on
    payload: online

  # drop connected message
  will_message:
    topic: $device_name/status_unavailable
    payload: unavailable
  # offline last message
  shutdown_message:
    topic: $device_name/status_off
    payload: offline

  # OTA message
  on_message:
    - topic: "$device_name/ota_mode"
      payload: 'ON'
      then:
        - deep_sleep.prevent: deep_sleep_component
        - switch.turn_on: deepsleep_switch
        - logger.log: "OTA blocking deep sleep"

    - topic: $device_name/ota_mode
      payload: 'OFF'
      then:
        - logger.log: "Ota finished back to deep sleep"
        - deep_sleep.allow: deep_sleep_component
        
#-------------------------------------------
# ETHERNET
#-------------------------------------------
ota:
  - platform: esphome
    password: !secret ota_password
    on_end:
      then:
        - mqtt.publish:
            topic: $device_name/ota_mode
            payload: 'OFF'
            retain: true
            
wifi:
  ssid:     !secret wifi_ssid
  password: !secret wifi_password
  fast_connect:   true
  enable_on_boot: false
  manual_ip:
    static_ip: 192.168.31.164
    gateway: 192.168.31.1
    subnet: 255.255.255.0
#captive_portal:

script:
  - id: skontroluj_vlhkost
    mode: queued
    then:
      - logger.log: "Čítam prvú hodnotu vlhkosti..."
      - component.update: sht31_temp
      - delay: 100ms
      - if:
          condition:
            - sensor.in_range: 
                id: humidity_air1
                above: 70.0
          then:
            - lambda: |-
                ESP_LOGI("HTU21D", "Vlhkosť pred ohrevom: %.1f %%", id(humidity_air1).state);
            - lambda: |-    
                ESP_LOGI("HTU21D", "Vlhkosť > 70%% → zapínam heater");
            - switch.turn_on: heater_switch
                
      - delay: 5s
      - switch.turn_off: heater_switch
      - logger.log: "Čítam druhú hodnotu vlhkosti po ohreve..."
      - switch.turn_on: humidity_en
      - component.update: humidity_air
      - delay: 100ms
      - lambda: |-
          ESP_LOGI("HTU21D", "Vlhkosť po ohreve: %.1f %%", id(humidity_air1).state);

      - delay: 100ms
      
      - lambda: ESP_LOGI("SOIL", "Conductivity Soil update");
      - component.update: conductivity_raw
      - lambda: ESP_LOGI("SOIL", "Moisture Soil update");
      - component.update: moisture_raw
      
#-------------------------------------------
# STATUS LED
#-------------------------------------------
status_led:
  pin: 
    number: $status_led_pin
    #ignore_strapping_warning: true
    inverted: True

#-------------------------------------------
# EXTERNAL AND CUSTOM COMPONENT
#-------------------------------------------
external_components:
  - source: 
      type: local
      path: custom_component
    components:
      # change priority on i2c
      # Source: https://www.homeassistant-cz.cz/viewtopic.php?f=56&t=1167&p=14296
      - i2c

#-------------------------------------------
# DEEP SLEEP
#-------------------------------------------
deep_sleep:
  id: deep_sleep_component
  sleep_duration: 30min
  run_duration:   1min
  
#-------------------------------------------
# SENSORS
#-------------------------------------------
sensor:
#-------------------------------------------
# Uptime
#-------------------------------------------
  - platform: uptime
    device_class: duration
    name: "MCU - Uptime"
    id: up_time
    icon: mdi:clock-start
    unit_of_measurement: "s"
    #update_interval: 60s
#-------------------------------------------
# Wake UP Cause
# 0 - ESP_SLEEP_WAKEUP_UNDEFINED: Wakeup reset, ota, power on
# 4 - ESP_SLEEP_WAKEUP_TIMER:     Wakeup caused by timer
# 7 - ESP_SLEEP_WAKEUP_GPIO:      Wakeup caused by GPIO
#-------------------------------------------
  - platform: template
    name:    "MCU - Wakeup"
    id:       wake_up_reason
    accuracy_decimals: 0
    lambda: return esp_sleep_get_wakeup_cause();
    entity_category: diagnostic

#-------------------------------------------
# ESP Reset reason
# 1  - ESP_RST_POWERON   Zapnutie
# 2  - ESP_RST_EXT       Externý reset
# 3  - ESP_RST_SW        Softvérový reset (napr. OTA)
# 4  - ESP_RST_PANIC     Kernel panic
# 5  - ESP_RST_INT_WDT   Watchdog (Interrupt)
# 6  - ESP_RST_TASK_WDT  Watchdog (Task)
# 7  - ESP_RST_WDT       Watchdog
# 8  - ESP_RST_DEEPSLEEP Zobudenie z deep sleep
# 9  - ESP_RST_BROWNOUT  Brownout reset
# 10 - ESP_RST_SDIO      SDIO reset
#-------------------------------------------
  - platform: template
    name: "MCU - Reset"
    id: reset_reason
    accuracy_decimals: 0
    lambda: return (int) esp_reset_reason();
    entity_category: diagnostic

#-------------------------------------------
# Wifi signal component
#-------------------------------------------
  - platform: wifi_signal
    name: "MCU - Signal"
    id: "signal_strange"
    update_interval: never

#-------------------------------------------
# ADC - Conductivity soil RAW
#-------------------------------------------
  - platform: adc
    pin:     $conductivity_adc_pin
    name:    "Raw - Conductivity"
    attenuation: 12db
    icon:     mdi:pulse
    id:       conductivity_raw
    update_interval: never
    unit_of_measurement: "mV"
    entity_category: diagnostic
    accuracy_decimals: 0
    filters:
      multiply: 1000
    #on_raw_value:
    #  - component.update: soil_conductivity
      
#-------------------------------------------
# Soil conductivity sensor EC calculate µS/cm
#-------------------------------------------
  - platform: template
    id: soil_conductivity
    name: "Soil - Conductivity"
    update_interval: never
    lambda: |-
      float conductivity = id(conductivity_raw).state;
      float moisture =     id(soil_moisture).state;
      float temp =         id(temp_soil).state;
      // conductivity correction
      float ec_raw = conductivity * 0.5;
      
      // moisture correction
      float moisture_factor = 1.0;
      if (moisture < 20) {
        moisture_factor = 3.0;
      } else if (moisture < 40) {
        moisture_factor = 1.5;
      }
      
      //temperature correction
      float temp_correction = 1.0 + 0.02 * (25.0 - temp);
      
      // return
      return ec_raw * moisture_factor * temp_correction;
      
    unit_of_measurement: "µS/cm"
    icon: mdi:flash
      
#-------------------------------------------
# ADC - Moisture soil RAW
#-------------------------------------------
  - platform: adc
    pin:     $moisture_adc_pin
    name:    "Raw - Moisture"
    attenuation: 12db
    icon:     mdi:pulse
    id:       moisture_raw
    update_interval: never
    unit_of_measurement: "mV"
    entity_category: diagnostic
    accuracy_decimals: 0
    filters:
      multiply: 1000
    #on_value:
    #  then:
    #    - component.update: battery_percent
    #    - globals.set:
    #        id: battery_global_value
    #        value: !lambda 'return x;'
    #device_class: battery
    #entity_category: diagnostic
    #icon: mdi:home-battery

    on_raw_value:
      - delay: 100ms
      - if:
          condition:
            sensor.in_range:
              id: moisture_raw
              below: $moisture_dry
          then:
            text_sensor.template.publish:
              id: soil_status
              state: "In Soil"
          else: 
            text_sensor.template.publish:
              id: soil_status
              state: No Soil / Stable 1 Day
      - component.update: soil_conductivity
      - component.update: soil_moisture


#-------------------------------------------
# PULSE COUNTER - Soil moisture sensor
#-------------------------------------------
  - platform: template
    id: soil_moisture
    name: "Soil - Moisture"
    update_interval: never
    lambda: "return id(moisture_raw).state;"
    unit_of_measurement: "%"
    icon: mdi:water-percent
    filters:
      - calibrate_linear:
         - $moisture_dry -> 0
         - $moisture_water -> 100
      - lambda: 'return max((float)0.0, x);'   # No value lower than 0  
      - lambda: 'return min((float)100.0, x);' # No value greater than 100
    on_value:
      - delay: 3s
      - if:
          condition:
            switch.is_off: deepsleep_switch
          then:
            - switch.turn_off: power_switch
            - binary_sensor.template.publish:
                id: online_status
                state: "False"
            - delay: 2s #2s
            - deep_sleep.enter: deep_sleep_component

#-------------------------------------------
# INA219 - Battery measure
#-------------------------------------------
  - platform: ina219
    address: $address_ina
    shunt_resistance: 0.1 ohm
    current:
      name: "MCU - Current"
      filters:
        multiply: 1000
      accuracy_decimals: 0
      unit_of_measurement: "mA"
      entity_category: diagnostic
    power:
      name: "MCU - Power"
      entity_category: diagnostic
    bus_voltage:
      name: "Battery - Voltage"
      entity_category: diagnostic
      id: ina_voltage
      icon: mdi:pulse
      on_value:
        component.update: battery_percent
    max_voltage: "$ina_max_voltage" 
    max_current: "$ina_max_current" 
    update_interval: 10s

#-------------------------------------------
# Template - Battery percent
#-------------------------------------------
  - platform: template
    name: "Battery - Percent"
    unit_of_measurement: "%"
    id: battery_percent
    update_interval: never
    lambda: "return id(ina_voltage).state;"
    filters:
      - calibrate_linear:
          - 3.5 -> 0 # 3.4
          - 5.5 -> 100
      - lambda: 'return max((float)0.0, x);' # No value lower than 0
      - lambda: 'return min((float)100.0, x);' # No value greater than 100
    device_class: battery
    entity_category: diagnostic

#-------------------------------------------
# Template - Battery global set
#-------------------------------------------
#  - platform: template
#    name: "${friendly_name} Battery global"
#    id: battery_temp_global
#    accuracy_decimals: 1
#    lambda: |-
#      return (id(battery_global_value));
#    internal: true

#-------------------------------------------
# Ambient light sensor - LUX sensor - BH1750
#-------------------------------------------
  - platform: bh1750
    name: "Outdoor - Illuminance"
    address: $address_bh
    accuracy_decimals: 0
    update_interval: never
    id: ambient_light
    device_class: illuminance

#-------------------------------------------
# Temperature pressure sensor - HTU21D
#-------------------------------------------
  #-----------------------------------------
  # External temperature and humidity sensor
  #-----------------------------------------
  - platform: sht3xd
    id: sht31_temp
    address: $address_sht
    update_interval: never
    heater_enabled: false
    temperature:
      name: "Outdoor - Temperature"
      id: temp_air      
    humidity:
      id: humidity_air1
      accuracy_decimals: 0
      internal: true


  #- platform: htu21d
  #  id: htu21_temp
  #  temperature:
  #    name: "Outdoor Temperature"
  #    id: temp_air
  #  humidity:
  #    #name: "Outdoor Humidity"
  #    internal: true
  #    id: humidity_air1
  #  heater:
  #    name: "Heater"
  #    internal: true
  #  update_interval: never
  #
  - platform: template
    name: "Outdoor - Humidity"
    id: humidity_air
    unit_of_measurement: "%"
    accuracy_decimals: 0
    icon: mdi:water-percent
    device_class: humidity
    lambda: "return id(humidity_air1).state;"
    update_interval: never

#-------------------------------------------
# DALLAS - Temperature sensor
# DS18B20 
# connected 4.7k to VCC 
#-------------------------------------------
# Temperature solar panel
  - platform: dallas_temp
    address: $address_dallas
    #name:    "Soil Temperature Raw"
    id:       temp_soil_dallas
    #unit_of_measurement: "°C"
    #icon: mdi:thermometer
    filters:
      filter_out: nan
    internal: True

  - platform: template
    name: "Soil - Temperature"
    id: temp_soil
    unit_of_measurement: "°C"
    icon: mdi:thermometer
    lambda: "return id(temp_soil_dallas).state;"
    update_interval: never

#-------------------------------------------
# OUTPUTS
#-------------------------------------------
output:
#-------------------------------------------
# PWM - moisture power pwm
#-------------------------------------------
  - platform:   ledc
    pin:        $moisture_pwm_pin
    frequency: "$moisture_frequency"
    id:         moisture_pwm_output

#-------------------------------------------
# Led Red - infolight
#-------------------------------------------
  - platform: gpio
    id:       indicator_led
    pin:     "$indicator_led"
    inverted: True

#-------------------------------------------
# LIGHTS - PWM
#-------------------------------------------
light:
#-------------------------------------------
# PWM - moisture power pwm
#-------------------------------------------
  - platform: monochromatic
    output: moisture_pwm_output
    name: "Moisture PWM"
    id: moisture_pwm_switch
    gamma_correct: 1.0 # gamma correction 1.0 = 100% = 100% brightness or pwm 0.5 = 50% pwm square wave pwm
    icon: mdi:square-wave
    on_turn_on:
      then:
        #- output.esp8266_pwm.set_frequency:
        #    id: moisture_pwm_output
        #    frequency: "$moisture_frequency"
        - light.turn_on:
            id: moisture_pwm_switch
            brightness: "$moisture_brightness"

#-------------------------------------------
# Led Red - infolight
#-------------------------------------------
  - platform: binary
    output: indicator_led
    id: indicatorled
    internal: true
    restore_mode: ALWAYS_OFF

#-------------------------------------------
# SWITCHES
#-------------------------------------------
switch:

  - platform: template
    name: "Heater"
    restore_mode: disabled
    optimistic: true
    icon: mdi:heat-wave
    id: heater_switch
    #lambda:  return id(temp_air1).is_heater_enabled();
    turn_on_action:
      - lambda: |-
          uint8_t data[2] = {0x30, 0x6D};  // Enable heater
          id(i2c_bus).write(0x44, data, 2);

    #  - lambda: |-
    #        id(sht31_temp).set_heater_level(10);
    #        id(sht31_temp).set_heater(true);
    turn_off_action:
      - lambda: |-
          uint8_t data[2] = {0x30, 0x66};  // Disable heater
          id(i2c_bus).write(0x44, data, 2);
    #  - lambda: |-
    #        id(sht31_temp).set_heater_level(0);
    #        id(sht31_temp).set_heater(false);
            
  - platform: template
    #name: "Humidity_en"
    restore_mode: disabled
    optimistic: true
    id: humidity_en
    internal: true

#-------------------------------------------
# Deep Sleep and continual measure enable switch
#-------------------------------------------
  - platform: template
    name: "Sleep/Loop Measure"
    #icon: mdi:power-sleep
    icon: mdi:move-resize-variant
    id: deepsleep_switch
    restore_mode: DISABLED 
    #entity_category: config
    optimistic: True
    on_turn_on:
      then:
        - delay: 10ms
        - logger.log: 
            format: "DEEP SLEEP DISABLE"
            level: warn
        - deep_sleep.prevent: deep_sleep_component

    on_turn_off:
      then:
        - logger.log: 
            format: "DEEP SLEEP ENABLE"
            level: warn
        - switch.turn_off: power_switch
        - delay: 2s
        - deep_sleep.enter: deep_sleep_component

#-------------------------------------------
# Power mofset switch 
# DALLAS, MOISTURE
#-------------------------------------------
  - platform: gpio
    name: "Power Switch"
    icon: mdi:move-resize-variant
    restore_mode: ALWAYS_ON
    pin: $power_pin
    id: power_switch
    entity_category: config
    internal: true
 
#-------------------------------------------
# BUTTONS
#-------------------------------------------
button: 
#-------------------------------------------
# RESTART
# restart = reset prevent deepsleep
#-------------------------------------------
  - platform: restart
    name: "MCU - Restart"
    entity_category: diagnostic

#-------------------------------------------
# INTERVALS - measurement cycling battery
#-------------------------------------------
interval:
  # cycling measure
  - interval: 5s
    then:
      - if:
          condition:
            - switch.is_on: deepsleep_switch
          then:
            - component.update: ambient_light
            - component.update: signal_strange
            - component.update: sht31_temp
            - component.update: moisture_raw
            - component.update: conductivity_raw
            - component.update: temp_soil
            - if:
                condition: 
                  switch.is_on: humidity_en
                then:
                  - component.update: humidity_air
  # led status blinking
  - interval: 2s
    then:
      - if:
          condition:
            - mqtt.connected:
          then:
            - light.turn_on: indicatorled
            - delay: 50ms
            - light.turn_off: indicatorled

#-------------------------------------------
# TEXT SENSORS
#-------------------------------------------
text_sensor:
#-------------------------------------------
# Soil Moisture
#-------------------------------------------
  - platform: template
    name: "Soil - Status"
    icon: mdi:flower
    id: soil_status
    lambda: |-
       return {"Loading"};
    update_interval: never
    
#-------------------------------------------
# BINARY SENSORS
#-------------------------------------------
binary_sensor:
#-------------------------------------------
# Online state mcu
# bug no send online or offline does always state 
#-------------------------------------------
  - platform: template
    id: online_status
    name: "MCU - Status"
    publish_initial_state: True
    icon: "mdi:power-standby"
    entity_category: diagnostic
